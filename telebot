from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import random

# Replace YOUR_TOKEN_HERE with your actual Telegram bot token
bot = telebot.TeleBot("YOUR_TOKEN_HERE")

# Define a list of greetings
greetings = ["I Miss Seeing You! How Have You Been", "Hey Thanks For Joining Our Little Group", "Well Damn Our Group Have A Celebrity Now!!", "Hey There Pal !How are You Feeling Today"]

# Define a command handler for the /start command
def start(update, context):
    update.message.reply_text("Hey There Pal")

# Define a command handler for the /help command
def help(update, context):
    update.message.reply_text("Here are the available commands:\n/start - start the bot\n/help - display the available commands\n/about - display information about the bot\n/toss - toss the coin\n/wish - wishing \n/quotes - quote from anime\n/question - asks a question\n/dare - ask for dares\n/afk - pretend to be offline\n/dice - rolls dice\n/insult - insults user")

# Define a command handler for the /about command
def about(update, context):
    update.message.reply_text("This bot was created by some idiot dont ask for anything please.")

# Define a handler for new members joining the group
def greet_new_member(update, context):
    for user in update.message.new_chat_members:
        greeting = random.choice(greetings)
        context.bot.send_message(update.message.chat_id, f"{greeting} {user.first_name}!")

# Define a command handler for the /toss command
def toss_coin(update, context):
    coin = random.choice(["heads", "tails"])
    update.message.reply_text(f"The coin landed on {coin}!")

# Define a command handler for the /dice command
def roll_dice(update, context):
    dice = random.choice(["1", "2","3","4","5","6"])
    update.message.reply_text(f"The dice landed on {dice}!")

# Define a list of positive messages
positive_messages = ["Have a Nice Day", "Go ask Eren About Wishes", "Is It Your Dying Wish?", "Wishing Again HUH!!"]

# Define a command handler for the /wish command
def make_wish(update, context):
    wish = random.choice(positive_messages)
    update.message.reply_text(wish)

# Define a list of quotes
quotes = ["“If you don’t take risks, you can’t create a future!” — Monkey D. Luffy (One Piece)",
          "“People, who can’t throw something important away, can never hope to change anything.” — Armin Arlert (Shingeki no Kyojin / Attack on Titan)",
          "“To know sorrow is not terrifying. What is terrifying is to know you can’t go back to happiness you could have.” — Matsumoto Rangiku (Bleach)",
          "“The world isn’t perfect. But it’s there for us, doing the best it can… that’s what makes it so damn beautiful.” — Roy Mustang (Full Metal Alchemist)",
          "If You Are Hungry !EAT","“You will never be able to love anybody else until you love yourself.” — Lelouch Lamperouge (Code Geass)","“People’s lives don’t end when they die, it ends when they lose faith.","“Forgetting is like a wound. The wound may heal but it has already left a scar.” — Monkey D Luffy (One Piece)"]

# Define a command handler for the /quotes command
def send_quote(update, context):
    quote = random.choice(quotes)
    update.message.reply_text(quote)

# Define a list of questions
questions = ["Who Is Your Favorite Anime Charecter?", "What Is Your Favorite Anime Scene", "What Was Your Most Embarrassing Moment", "Do You Prefer Cats Or Dogs","Do You Drink Or Smoke?"]

# Define a command handler for the /question command
def ask_question(update, context):
    question = random.choice(questions)
    update.message.reply_text(question)

# Define a list of dares
dares = ["Tell Us Your Worst Habit", "Tell Us Your Biggest Insecurity", "Do 100 Push ups", "Show The Most Embarrasing Photo On Your Phone", "Tell Me The Name Of Your GF/BF"]

# Define a command handler for the /dare command
def choose_dare(update, context):
    dare = random.choice(dares)
    update.message.reply_text(dare)

negative_messages = ["successfully wasted 4 months still needs insults", "try swimming in lava for a better world", "dude i dont have any more insults for you", "suggest some insults i am out!"]

# Define a command handler for the /insult command
def make_insult(update, context):
    insult = random.choice(negative_messages)
    update.message.reply_text(insult)

# Define a variable to store users who are AFK
afk_users = set()

# Define a command handler for the /afk command
def go_afk(update, context):
    afk_users.add(update.message.from_user.id)
    update.message.reply_text("You Are Now Away")

# Define a message handler to check if users are AFK
def check_afk(update, context):
    if update.message.from_user.id in afk_users:
        afk_users.remove(update.message.from_user.id)
        update.message.reply_text("Welcome back! Chief")

def main():
    updater = Updater("YOUR_BOT_TOKEN", use_context=True)
    dp = updater.dispatcher

    # Register command handlers
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help))
    dp.add_handler(CommandHandler("about", about))
    dp.add_handler(CommandHandler("toss", toss_coin))
    dp.add_handler(CommandHandler("dice", roll_dice))
    dp.add_handler(CommandHandler("wish", make_wish))
    dp.add_handler(CommandHandler("quotes", send_quote))
    dp.add_handler(CommandHandler("question", ask_question))
    dp.add_handler(CommandHandler("dare", choose_dare))
    dp.add_handler(CommandHandler("insult", make_insult))
    dp.add_handler(CommandHandler("afk", go_afk))

    # Register message handler for new members
    dp.add_handler(MessageHandler(Filters.status_update.new_chat_members, greet_new_member))

    # Register message handler for AFK check
    dp.add_handler(MessageHandler(Filters.text, check_afk))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
